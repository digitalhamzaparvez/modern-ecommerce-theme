{% paginate collection.products by 12 %}
<div class="flex items-center justify-between mb-4">
  <h2 class="text-xl font-semibold">{{ collection.title }}</h2>
  <div>
    <label class="mr-2 text-sm text-gray-600">Sort</label>
    <select id="sort-by" class="border rounded-lg px-3 py-2 text-sm">
      <option value="best-selling">Best selling</option>
      <option value="price-ascending">Price, low to high</option>
      <option value="price-descending">Price, high to low</option>
      <option value="title-ascending">Alphabetically, A-Z</option>
      <option value="title-descending">Alphabetically, Z-A</option>
      <option value="created-descending">Date, new to old</option>
      <option value="created-ascending">Date, old to new</option>
    </select>
  </div>
</div>

<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6" id="product-grid" data-infinite-grid>
  {% for product in collection.products %}
    {% render 'product-card', product: product %}
  {% endfor %}
</div>

{% if paginate.next %}
  <div class="mt-8 text-center">
    <a href="{{ paginate.next.url }}" class="px-4 py-2 border rounded-lg" data-load-more>Load more</a>
  </div>
{% endif %}

<script>
  document.addEventListener('alpine:init', () => {
    const sort = document.getElementById('sort-by')
    if (sort) {
      sort.addEventListener('change', () => {
        const url = new URL(window.location.href)
        url.searchParams.set('sort_by', sort.value)
        window.location.href = url.toString()
      })
    }

    const grid = document.querySelector('[data-infinite-grid]')
    const loadMore = document.querySelector('[data-load-more]')
    if (grid && loadMore) {
      loadMore.addEventListener('click', async (e) => {
        e.preventDefault()
        const res = await fetch(loadMore.getAttribute('href'))
        const html = await res.text()
        const temp = document.createElement('div')
        temp.innerHTML = html
        const nextGrid = temp.querySelector('#product-grid')
        nextGrid?.childNodes.forEach(n => grid.appendChild(n.cloneNode(true)))
        const nextLink = temp.querySelector('[data-load-more]')
        if (nextLink) {
          loadMore.href = nextLink.getAttribute('href')
        } else {
          loadMore.parentElement.remove()
        }
      })
    }
  })
</script>
{% endpaginate %}
