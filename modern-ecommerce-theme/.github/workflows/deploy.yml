name: Deploy to Shopify

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: Lint and Test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: TypeScript type check
        run: npm run type-check
        
      - name: Build assets
        run: npm run build

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    needs: lint-and-test
    runs-on: ubuntu-latest
    name: Deploy to Staging
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build assets
        run: npm run build
        
      - name: Deploy to Shopify Staging
        uses: pgrimaud/action-shopify@v1.3.0
        env:
          SHOPIFY_PASSWORD: ${{ secrets.SHOPIFY_STAGING_PASSWORD }}
          SHOPIFY_STORE_URL: ${{ secrets.SHOPIFY_STAGING_STORE_URL }}
          SHOPIFY_THEME_ID: ${{ secrets.SHOPIFY_STAGING_THEME_ID }}

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: lint-and-test
    runs-on: ubuntu-latest
    name: Deploy to Production
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build assets
        run: npm run build
        
      - name: Deploy to Shopify Production
        uses: pgrimaud/action-shopify@v1.3.0
        env:
          SHOPIFY_PASSWORD: ${{ secrets.SHOPIFY_PASSWORD }}
          SHOPIFY_STORE_URL: ${{ secrets.SHOPIFY_STORE_URL }}
          SHOPIFY_THEME_ID: ${{ secrets.SHOPIFY_THEME_ID }}
          
      - name: Notify deployment success
        if: success()
        run: |
          echo "üöÄ Deployment to production successful!"
          echo "Theme deployed to: ${{ secrets.SHOPIFY_STORE_URL }}"
          
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment to production failed!"
          echo "Please check the logs and try again."

  performance-audit:
    if: github.event_name == 'pull_request'
    needs: lint-and-test
    runs-on: ubuntu-latest
    name: Performance Audit
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build assets
        run: npm run build
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouse.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Check for vulnerabilities
        run: |
          if npm audit --audit-level high --json | jq '.vulnerabilities | length' | grep -q '^0$'; then
            echo "‚úÖ No high-severity vulnerabilities found"
          else
            echo "‚ùå High-severity vulnerabilities detected"
            npm audit --audit-level high
            exit 1
          fi