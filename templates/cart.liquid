

<main class="max-w-4xl mx-auto px-6 py-8">
  <!-- Breadcrumbs -->
  <nav class="mb-8">
    {% render 'breadcrumbs' %}
  </nav>

  <div x-data="cartPage()" x-init="init()">
    <!-- Cart Header -->
    <div class="flex items-center justify-between mb-8">
      <h1 class="text-3xl font-bold text-slate-800">Shopping Cart</h1>
      <div class="text-slate-600">
        <span x-text="cart.item_count"></span> item<span x-show="cart.item_count !== 1">s</span>
      </div>
    </div>

    <!-- Empty Cart State -->
    <div x-show="cart.item_count === 0" class="text-center py-16">
      <div class="w-24 h-24 bg-slate-100 rounded-full flex items-center justify-center mx-auto mb-6">
        <svg class="w-12 h-12 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m2.6 8L6 21h12M9 19v2m4-2v2"></path>
        </svg>
      </div>
      <h2 class="text-2xl font-semibold text-slate-800 mb-4">Your cart is empty</h2>
      <p class="text-slate-600 mb-8 max-w-md mx-auto">
        Looks like you haven't added any items to your cart yet. Start shopping to fill it up!
      </p>
      <a href="/collections/all" class="btn-premium inline-flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
        </svg>
        Continue Shopping
      </a>
    </div>

    <!-- Cart Items -->
    <div x-show="cart.item_count > 0" class="space-y-8">
      <!-- Progress Indicator -->
      <div class="bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200">
        <div class="flex items-center justify-between text-sm mb-2">
          <span class="text-green-700 font-medium">🚚 Free shipping at $75</span>
          <span class="text-green-600" x-text="'$' + Math.max(0, (7500 - cart.total_price) / 100).toFixed(2) + ' away'"></span>
        </div>
        <div class="w-full bg-green-200 rounded-full h-2">
          <div 
            class="bg-green-500 h-2 rounded-full transition-all duration-500" 
            :style="'width: ' + Math.min(100, (cart.total_price / 7500) * 100) + '%'"
          ></div>
        </div>
      </div>

      <!-- Cart Table -->
      <div class="bg-white rounded-lg shadow-sm border border-slate-200 overflow-hidden">
        <div class="hidden md:grid grid-cols-12 gap-4 p-4 bg-slate-50 border-b text-sm font-medium text-slate-700">
          <div class="col-span-6">Product</div>
          <div class="col-span-2 text-center">Price</div>
          <div class="col-span-2 text-center">Quantity</div>
          <div class="col-span-2 text-center">Total</div>
        </div>

        <div class="divide-y divide-slate-200">
          <template x-for="item in cart.items" :key="item.key">
            <div class="p-4 md:grid md:grid-cols-12 md:gap-4 md:items-center space-y-4 md:space-y-0">
              <!-- Product Info -->
              <div class="md:col-span-6 flex items-start space-x-4">
                <div class="flex-shrink-0 w-20 h-20 bg-slate-100 rounded-lg overflow-hidden">
                  <img 
                    :src="item.image" 
                    :alt="item.product_title"
                    class="w-full h-full object-cover"
                  >
                </div>
                <div class="flex-1 min-w-0">
                  <h3 class="font-semibold text-slate-800 line-clamp-2" x-text="item.product_title"></h3>
                  <div class="text-sm text-slate-600 mt-1">
                    <div x-show="item.variant_title && item.variant_title !== 'Default Title'" x-text="item.variant_title"></div>
                    <div x-show="item.sku" x-text="'SKU: ' + item.sku"></div>
                  </div>
                  <!-- Mobile Price -->
                  <div class="md:hidden text-lg font-semibold text-slate-800 mt-2" x-text="formatMoney(item.price)"></div>
                </div>
              </div>

              <!-- Price (Desktop) -->
              <div class="hidden md:block md:col-span-2 text-center">
                <div class="text-lg font-semibold text-slate-800" x-text="formatMoney(item.price)"></div>
                <div x-show="item.original_price > item.price" class="text-sm text-slate-500 line-through" x-text="formatMoney(item.original_price)"></div>
              </div>

              <!-- Quantity -->
              <div class="md:col-span-2">
                <div class="flex items-center justify-center space-x-3">
                  <button 
                    @click="updateQuantity(item.key, item.quantity - 1)"
                    :disabled="updating"
                    class="w-8 h-8 rounded-full border border-slate-300 flex items-center justify-center hover:bg-slate-50 disabled:opacity-50"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                  </button>
                  <span class="w-8 text-center font-medium" x-text="item.quantity"></span>
                  <button 
                    @click="updateQuantity(item.key, item.quantity + 1)"
                    :disabled="updating"
                    class="w-8 h-8 rounded-full border border-slate-300 flex items-center justify-center hover:bg-slate-50 disabled:opacity-50"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                  </button>
                </div>
                <!-- Remove Button -->
                <div class="text-center mt-2">
                  <button 
                    @click="removeItem(item.key)"
                    :disabled="updating"
                    class="text-sm text-red-600 hover:text-red-700 disabled:opacity-50"
                  >
                    Remove
                  </button>
                </div>
              </div>

              <!-- Total -->
              <div class="md:col-span-2 text-center">
                <div class="text-lg font-semibold text-slate-800" x-text="formatMoney(item.line_price)"></div>
                <div x-show="item.original_line_price > item.line_price" class="text-sm text-green-600" x-text="'Save ' + formatMoney(item.original_line_price - item.line_price)"></div>
              </div>
            </div>
          </template>
        </div>
      </div>

      <!-- Cart Footer -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Discount Code -->
        <div class="lg:col-span-2 space-y-6">
          <div class="card-premium p-6">
            <h3 class="font-semibold text-slate-800 mb-4">Discount Code</h3>
            <form @submit.prevent="applyDiscount()" class="flex space-x-3">
              <input 
                x-model="discountCode"
                type="text" 
                placeholder="Enter discount code"
                class="flex-1 px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
              >
              <button 
                type="submit"
                :disabled="!discountCode || updating"
                class="btn-premium-outline px-6 disabled:opacity-50"
              >
                Apply
              </button>
            </form>
            <div x-show="discountMessage" class="mt-2 text-sm" :class="discountError ? 'text-red-600' : 'text-green-600'" x-text="discountMessage"></div>
          </div>

          <!-- Order Notes -->
          <div class="card-premium p-6">
            <h3 class="font-semibold text-slate-800 mb-4">Order Notes</h3>
            <textarea 
              x-model="orderNotes"
              @change="updateOrderNotes()"
              rows="3"
              placeholder="Special instructions for your order..."
              class="w-full px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent resize-none"
            ></textarea>
          </div>
        </div>

        <!-- Order Summary -->
        <div class="card-premium p-6 h-fit">
          <h3 class="font-semibold text-slate-800 mb-4">Order Summary</h3>
          
          <div class="space-y-3 mb-6">
            <div class="flex items-center justify-between">
              <span class="text-slate-600">Subtotal</span>
              <span class="font-medium" x-text="formatMoney(cart.items_subtotal_price)"></span>
            </div>
            
            <div x-show="cart.total_discount > 0" class="flex items-center justify-between text-green-600">
              <span>Discount</span>
              <span x-text="'-' + formatMoney(cart.total_discount)"></span>
            </div>
            
            <div class="flex items-center justify-between">
              <span class="text-slate-600">Shipping</span>
              <span class="text-slate-600" x-text="cart.items_subtotal_price >= 7500 ? 'Free' : 'Calculated at checkout'"></span>
            </div>
            
            <div class="flex items-center justify-between">
              <span class="text-slate-600">Tax</span>
              <span class="text-slate-600">Calculated at checkout</span>
            </div>
            
            <div class="border-t pt-3 flex items-center justify-between text-lg font-semibold">
              <span>Total</span>
              <span x-text="formatMoney(cart.total_price)"></span>
            </div>
          </div>

          <!-- Trust Signals -->
          <div class="grid grid-cols-3 gap-2 text-center text-xs text-slate-500 mb-6">
            <div class="flex flex-col items-center">
              <svg class="w-6 h-6 text-green-500 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>Secure</span>
            </div>
            <div class="flex flex-col items-center">
              <svg class="w-6 h-6 text-blue-500 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
              </svg>
              <span>Fast Ship</span>
            </div>
            <div class="flex flex-col items-center">
              <svg class="w-6 h-6 text-purple-500 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
              </svg>
              <span>Easy Returns</span>
            </div>
          </div>

          <!-- Checkout Button -->
          <button 
            @click="proceedToCheckout()"
            :disabled="cart.item_count === 0 || updating"
            class="w-full btn-premium text-lg py-4 disabled:opacity-50"
          >
            <span x-show="!updating">Secure Checkout</span>
            <span x-show="updating">Updating...</span>
            <svg class="w-5 h-5 ml-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
          </button>

          <!-- Continue Shopping -->
          <div class="text-center mt-4">
            <a href="/collections/all" class="text-amber-600 hover:text-amber-700 font-medium text-sm">
              ← Continue Shopping
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
  function cartPage() {
    return {
      cart: {},
      updating: false,
      discountCode: '',
      discountMessage: '',
      discountError: false,
      orderNotes: '',
      
      async init() {
        await this.refreshCart();
        this.orderNotes = this.cart.note || '';
      },
      
      async refreshCart() {
        try {
          const response = await fetch('/cart.js');
          this.cart = await response.json();
        } catch (error) {
          console.error('Failed to refresh cart:', error);
        }
      },
      
      async updateQuantity(key, quantity) {
        if (quantity < 1) {
          return this.removeItem(key);
        }
        
        this.updating = true;
        try {
          const response = await fetch('/cart/change.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: key, quantity: quantity })
          });
          
          if (response.ok) {
            await this.refreshCart();
          }
        } catch (error) {
          console.error('Failed to update quantity:', error);
        } finally {
          this.updating = false;
        }
      },
      
      async removeItem(key) {
        this.updating = true;
        try {
          const response = await fetch('/cart/change.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: key, quantity: 0 })
          });
          
          if (response.ok) {
            await this.refreshCart();
          }
        } catch (error) {
          console.error('Failed to remove item:', error);
        } finally {
          this.updating = false;
        }
      },
      
      async applyDiscount() {
        if (!this.discountCode.trim()) return;
        
        this.updating = true;
        this.discountMessage = '';
        
        try {
          // Shopify doesn't have a direct API for applying discounts in cart
          // This would typically be handled during checkout
          // For demo purposes, we'll show a message
          this.discountMessage = 'Discount will be applied at checkout';
          this.discountError = false;
        } catch (error) {
          this.discountMessage = 'Invalid discount code';
          this.discountError = true;
        } finally {
          this.updating = false;
        }
      },
      
      async updateOrderNotes() {
        try {
          await fetch('/cart/update.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ note: this.orderNotes })
          });
        } catch (error) {
          console.error('Failed to update order notes:', error);
        }
      },
      
      proceedToCheckout() {
        // Track checkout initiation
        if (typeof gtag !== 'undefined') {
          gtag('event', 'begin_checkout', {
            currency: this.cart.currency,
            value: this.cart.total_price / 100,
            items: this.cart.items.map(item => ({
              item_id: item.product_id,
              item_name: item.product_title,
              quantity: item.quantity,
              price: item.price / 100
            }))
          });
        }
        
        window.location.href = '/checkout';
      },
      
      formatMoney(cents) {
        return Shopify.formatMoney(cents);
      }
    };
  }
</script>

