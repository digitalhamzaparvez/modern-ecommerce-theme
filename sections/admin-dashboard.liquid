{% comment %}
  Admin Dashboard Section
  This section provides admin capabilities and analytics overview
  Note: This is a demo implementation - actual admin functionality would be through Shopify Admin
{% endcomment %}

<section class="admin-dashboard bg-slate-50 py-12" x-data="adminDashboard()">
  <div class="max-w-7xl mx-auto px-6">
    <!-- Dashboard Header -->
    <div class="flex items-center justify-between mb-8">
      <div>
        <h2 class="text-3xl font-bold text-slate-800">Store Dashboard</h2>
        <p class="text-slate-600 mt-1">Overview of your store performance</p>
      </div>
      <div class="flex items-center space-x-3">
        <select 
          x-model="dateRange"
          @change="updateMetrics()"
          class="border border-slate-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-amber-500 focus:border-transparent"
        >
          <option value="7">Last 7 days</option>
          <option value="30">Last 30 days</option>
          <option value="90">Last 90 days</option>
        </select>
        <button 
          @click="refreshData()"
          :disabled="loading"
          class="btn-premium-outline px-4 py-2 disabled:opacity-50"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
          </svg>
          Refresh
        </button>
      </div>
    </div>

    <!-- Key Metrics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      <!-- Total Orders -->
      <div class="card-premium p-6">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm text-slate-600 mb-1">Total Orders</p>
            <p class="text-2xl font-bold text-slate-800" x-text="metrics.totalOrders"></p>
            <div class="flex items-center mt-2">
              <svg class="w-4 h-4 text-green-500 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
              </svg>
              <span class="text-sm text-green-600" x-text="'+' + metrics.ordersGrowth + '%'"></span>
            </div>
          </div>
          <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Revenue -->
      <div class="card-premium p-6">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm text-slate-600 mb-1">Revenue</p>
            <p class="text-2xl font-bold text-slate-800" x-text="'$' + metrics.revenue.toLocaleString()"></p>
            <div class="flex items-center mt-2">
              <svg class="w-4 h-4 text-green-500 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
              </svg>
              <span class="text-sm text-green-600" x-text="'+' + metrics.revenueGrowth + '%'"></span>
            </div>
          </div>
          <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Conversion Rate -->
      <div class="card-premium p-6">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm text-slate-600 mb-1">Conversion Rate</p>
            <p class="text-2xl font-bold text-slate-800" x-text="metrics.conversionRate + '%'"></p>
            <div class="flex items-center mt-2">
              <svg class="w-4 h-4 text-amber-500 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
              </svg>
              <span class="text-sm text-amber-600" x-text="'+' + metrics.conversionGrowth + '%'"></span>
            </div>
          </div>
          <div class="w-12 h-12 bg-amber-100 rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-amber-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Average Order Value -->
      <div class="card-premium p-6">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm text-slate-600 mb-1">Avg. Order Value</p>
            <p class="text-2xl font-bold text-slate-800" x-text="'$' + metrics.averageOrderValue"></p>
            <div class="flex items-center mt-2">
              <svg class="w-4 h-4 text-purple-500 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
              </svg>
              <span class="text-sm text-purple-600" x-text="'+' + metrics.aovGrowth + '%'"></span>
            </div>
          </div>
          <div class="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m2.6 8L6 21h12M9 19v2m4-2v2"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- Charts and Analytics -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
      <!-- Sales Chart -->
      <div class="card-premium p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-slate-800">Sales Overview</h3>
          <div class="flex items-center space-x-2">
            <div class="flex items-center">
              <div class="w-3 h-3 bg-amber-500 rounded-full mr-2"></div>
              <span class="text-sm text-slate-600">Revenue</span>
            </div>
            <div class="flex items-center">
              <div class="w-3 h-3 bg-blue-500 rounded-full mr-2"></div>
              <span class="text-sm text-slate-600">Orders</span>
            </div>
          </div>
        </div>
        <!-- Placeholder for chart -->
        <div class="h-64 bg-slate-100 rounded-lg flex items-center justify-center">
          <div class="text-center">
            <svg class="w-12 h-12 text-slate-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
            <p class="text-slate-500">Sales Chart</p>
            <p class="text-sm text-slate-400">Chart.js integration needed</p>
          </div>
        </div>
      </div>

      <!-- Top Products -->
      <div class="card-premium p-6">
        <h3 class="text-lg font-semibold text-slate-800 mb-6">Top Products</h3>
        <div class="space-y-4">
          <template x-for="(product, index) in metrics.topProducts" :key="product.id">
            <div class="flex items-center space-x-4">
              <div class="flex-shrink-0 w-2 h-2 rounded-full" :class="index === 0 ? 'bg-amber-500' : index === 1 ? 'bg-slate-400' : index === 2 ? 'bg-amber-600' : 'bg-slate-300'"></div>
              <div class="flex-shrink-0 w-12 h-12 bg-slate-100 rounded-lg overflow-hidden">
                <img :src="product.image" :alt="product.title" class="w-full h-full object-cover">
              </div>
              <div class="flex-1 min-w-0">
                <h4 class="font-medium text-slate-800 truncate" x-text="product.title"></h4>
                <p class="text-sm text-slate-600" x-text="product.sales + ' sold'"></p>
              </div>
              <div class="text-right">
                <p class="font-semibold text-slate-800" x-text="'$' + product.revenue.toLocaleString()"></p>
              </div>
            </div>
          </template>
        </div>
      </div>
    </div>

    <!-- Quick Actions -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
      <!-- Product Management -->
      <div class="card-premium p-6">
        <div class="flex items-center mb-4">
          <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3">
            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
            </svg>
          </div>
          <h3 class="font-semibold text-slate-800">Products</h3>
        </div>
        <p class="text-slate-600 text-sm mb-4">Manage your product catalog, inventory, and pricing.</p>
        <div class="space-y-2">
          <a href="/admin/products" class="block text-sm text-amber-600 hover:text-amber-700">→ View all products</a>
          <a href="/admin/products/new" class="block text-sm text-amber-600 hover:text-amber-700">→ Add new product</a>
          <a href="/admin/inventory" class="block text-sm text-amber-600 hover:text-amber-700">→ Manage inventory</a>
        </div>
      </div>

      <!-- Order Management -->
      <div class="card-premium p-6">
        <div class="flex items-center mb-4">
          <div class="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center mr-3">
            <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
            </svg>
          </div>
          <h3 class="font-semibold text-slate-800">Orders</h3>
        </div>
        <p class="text-slate-600 text-sm mb-4">Process orders, manage fulfillment, and track shipments.</p>
        <div class="space-y-2">
          <a href="/admin/orders" class="block text-sm text-amber-600 hover:text-amber-700">→ View all orders</a>
          <a href="/admin/orders?status=unfulfilled" class="block text-sm text-amber-600 hover:text-amber-700">→ Pending orders</a>
          <a href="/admin/abandoned_checkouts" class="block text-sm text-amber-600 hover:text-amber-700">→ Abandoned carts</a>
        </div>
      </div>

      <!-- Analytics & Reports -->
      <div class="card-premium p-6">
        <div class="flex items-center mb-4">
          <div class="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mr-3">
            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
          </div>
          <h3 class="font-semibold text-slate-800">Analytics</h3>
        </div>
        <p class="text-slate-600 text-sm mb-4">Track performance, analyze trends, and optimize your store.</p>
        <div class="space-y-2">
          <a href="/admin/analytics" class="block text-sm text-amber-600 hover:text-amber-700">→ View analytics</a>
          <a href="/admin/reports" class="block text-sm text-amber-600 hover:text-amber-700">→ Generate reports</a>
          <a href="/admin/analytics/reports/customers" class="block text-sm text-amber-600 hover:text-amber-700">→ Customer insights</a>
        </div>
      </div>
    </div>

    <!-- Recent Activity -->
    <div class="card-premium p-6">
      <h3 class="text-lg font-semibold text-slate-800 mb-6">Recent Activity</h3>
      <div class="space-y-4">
        <template x-for="activity in recentActivity" :key="activity.id">
          <div class="flex items-start space-x-4">
            <div class="flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center" :class="activity.type === 'order' ? 'bg-green-100 text-green-600' : activity.type === 'product' ? 'bg-blue-100 text-blue-600' : 'bg-amber-100 text-amber-600'">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path x-show="activity.type === 'order'" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                <path x-show="activity.type === 'product'" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                <path x-show="activity.type === 'customer'" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
            </div>
            <div class="flex-1 min-w-0">
              <p class="text-sm text-slate-800" x-text="activity.description"></p>
              <p class="text-xs text-slate-500" x-text="activity.time"></p>
            </div>
          </div>
        </template>
      </div>
    </div>
  </div>
</section>

<script>
  function adminDashboard() {
    return {
      dateRange: 30,
      loading: false,
      metrics: {
        totalOrders: 156,
        ordersGrowth: 12.5,
        revenue: 23450,
        revenueGrowth: 18.2,
        conversionRate: 2.8,
        conversionGrowth: 5.1,
        averageOrderValue: 85,
        aovGrowth: 8.3,
        topProducts: [
          { id: 1, title: 'Premium Fitness Tracker', sales: 45, revenue: 4500, image: '/assets/product1.jpg' },
          { id: 2, title: 'Organic Pet Supplements', sales: 38, revenue: 3800, image: '/assets/product2.jpg' },
          { id: 3, title: 'Smart Home Device', sales: 32, revenue: 3200, image: '/assets/product3.jpg' },
          { id: 4, title: 'Beauty Care Kit', sales: 28, revenue: 2800, image: '/assets/product4.jpg' }
        ]
      },
      recentActivity: [
        { id: 1, type: 'order', description: 'New order #1056 received from John Doe', time: '5 minutes ago' },
        { id: 2, type: 'product', description: 'Product "Fitness Tracker" inventory updated', time: '12 minutes ago' },
        { id: 3, type: 'customer', description: 'New customer registration: Sarah Smith', time: '25 minutes ago' },
        { id: 4, type: 'order', description: 'Order #1055 shipped to customer', time: '1 hour ago' },
        { id: 5, type: 'product', description: 'New product "Wellness Kit" added to catalog', time: '2 hours ago' }
      ],
      
      async updateMetrics() {
        this.loading = true;
        // Simulate API call
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // Update metrics based on date range
        const multiplier = this.dateRange === 7 ? 0.3 : this.dateRange === 30 ? 1 : 2.5;
        this.metrics.totalOrders = Math.floor(156 * multiplier);
        this.metrics.revenue = Math.floor(23450 * multiplier);
        
        this.loading = false;
      },
      
      async refreshData() {
        this.loading = true;
        // Simulate data refresh
        await new Promise(resolve => setTimeout(resolve, 800));
        
        // Add some randomness to simulate real-time updates
        this.metrics.totalOrders += Math.floor(Math.random() * 5);
        this.metrics.revenue += Math.floor(Math.random() * 1000);
        
        this.loading = false;
      }
    };
  }
</script>